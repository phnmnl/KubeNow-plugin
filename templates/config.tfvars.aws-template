# Cluster configuration
cluster_prefix = "your-cluster-prefix" # Your cluster prefix
aws_region = "eu-west-1" # Some region
availability_zone = "eu-west-1a" # Some availability zone

# Credentials
aws_access_key_id = "your-acces-key-id"
aws_secret_access_key = "your-secret-access-key"

# Master configuration
master_instance_type = "t2.medium"
master_disk_size = "20" # Size in GB
master_as_edge = "true"

# Node configuration
node_count = "3"
node_instance_type = "t2.medium"
node_disk_size = "20" # Size in GB

# Gluster configuration
glusternode_count = "1"
glusternode_instance_type = "t2.medium"
glusternode_disk_size = "20" # Size in GB
glusternode_extra_disk_size = "200" # Size in GB

# Edge configuration (optional)
# edge_count = "2"
# edge_instance_type = "t2.medium"
# edge_disk_size = "20" # Size in GB

# Cloudflare configuration (optional)
# use_cloudflare = "true"
# cloudflare_email = "your-cloudflare-email"
# cloudflare_token = "your-cloudflare-token"
# cloudflare_domain = "your-domain-name"
# cloudflare_subdomain = "your-subdomain-name"

# Cloudflare proxy (optional)
# cloudflare_proxied = "true"
# cloudflare_record_texts = ["galaxy","notebook","luigi","dashboard"] # Warn: wildcards are not supported when using proxied records

provision = {
  "action" = {
    "type"      = "ansible-playbook"
    "playbook"  = "playbooks/install-core.yml"
  }

  "action" = {
    "type"      = "ansible-playbook"
    "playbook"  = "plugins/phnmnl/KubeNow-plugin/playbooks/create-postgres-sc.yml"
  }

  "action" = {
    "type"      = "ansible-playbook"
    "playbook"  = "playbooks/create-pvc.yml"
    "extra_vars" = {
      "claim_name"      = "galaxy-pvc"
      "storage"         = "90G"
    }
  }

  "action" = {
    "type"      = "ansible-playbook"
    "playbook"  = "playbooks/create-pvc.yml"
    "extra_vars" = {
      "claim_name"       = "postgres-pvc"
      "storage"          = "5G"
      "storageClassName" = "sc-pg-optimized"
    }
  }

  "action" = {
    "type"     = "ansible-playbook"
    "playbook" = "plugins/phnmnl/KubeNow-plugin/playbooks/install-phenomenal-playbook.yml"
    "extra_vars" = {
      "username_all_services" = "admin"
      "password_all_services" = "password"
      "galaxy_admin_email"    = "yoourname@bla.bla.com"
      "galaxy_include"        = "true"
      "jupyter_include"       = "true"
      "luigi_include"         = "true"
      "dashboard_include"     = "false"
      "logmon_include"        = "false"
    }
  }

#
# Optional pachyderm installation
#
# "action" = {
#   "type"     = "ansible-playbook"
#   "playbook" = "plugins/phnmnl/KubeNow-plugin/playbooks/install-pachyderm-minio-playbook.yml"
#   "extra_vars" = {
#     "minio_release_name"      = "minio-release"
#     "minio_pvc_size"          = "20G"
#     "minio_accesskey"         = "myaccesskey"
#     "minio_secretkey"         = "mysecretkey"
#     "minio_replicas"          = "4"
#     "pachyderm_release_name"  = "pachyderm-release"
#     "pachyderm_etcd_pvc_size" = "5G"
#   }
# }

  "action" = {
    "type"       = "local-exec"
    "command"    = "plugins/phnmnl/KubeNow-plugin/bin/phenomenal-post-install.sh"
  }

}

#
# Variables below should not need to be changed
#
kubeadm_token = "your-kubeadm-token" # Autogenerated kubeadm token (don't change it)
provider = "aws" # cloud provider for this config(don't change it)
boot_image = "kubenow-v052"
bootstrap_script = "bootstrap/bootstrap-default.sh"
preflight_script = "plugins/phnmnl/KubeNow-plugin/bin/preflight-check"
provisioner_image = "provisioner-image-name-autogenerated"
preset = "phnmnl/KubeNow-plugin"
